// This file is generated by Firebase Genkit.
'use server';
/**
 * @fileOverview A Genkit flow that determines the appropriate tone and structure for a newsletter.
 *
 * - determineNewsletterToneStructure - A function that determines the tone and structure for a newsletter.
 * - DetermineNewsletterToneStructureInput - The input type for the determineNewsletterToneStructure function.
 * - DetermineNewsletterToneStructureOutput - The return type for the determineNewsletterToneStructure function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const DetermineNewsletterToneStructureInputSchema = z.object({
  topic: z.string().describe('The topic of the newsletter.'),
  targetAudience: z.string().describe('The target audience for the newsletter.'),
  previousNewsletterPerformance: z
    .string()
    .describe('Data on the previous newsletter performance, including open rates and click-through rates.'),
});
export type DetermineNewsletterToneStructureInput = z.infer<
  typeof DetermineNewsletterToneStructureInputSchema
>;

const DetermineNewsletterToneStructureOutputSchema = z.object({
  tone: z.string().describe('The recommended tone for the newsletter (e.g., formal, informal, humorous).'),
  structure: z
    .string()
    .describe(
      'The recommended structure for the newsletter (e.g., introduction, key points, call to action).' + 
      'Explain reasoning behind the structur recommendations based on inputs.'
    ),
  relevanceScore: z.number().describe('A score indicating the relevance of the topic to the target audience.'),
});
export type DetermineNewsletterToneStructureOutput = z.infer<
  typeof DetermineNewsletterToneStructureOutputSchema
>;

export async function determineNewsletterToneStructure(
  input: DetermineNewsletterToneStructureInput
): Promise<DetermineNewsletterToneStructureOutput> {
  return determineNewsletterToneStructureFlow(input);
}

const determineNewsletterToneStructurePrompt = ai.definePrompt({
  name: 'determineNewsletterToneStructurePrompt',
  input: {schema: DetermineNewsletterToneStructureInputSchema},
  output: {schema: DetermineNewsletterToneStructureOutputSchema},
  prompt: `You are an AI assistant that helps marketing managers determine the optimal tone and structure for their newsletters.

  Based on the topic, target audience, and previous newsletter performance, provide recommendations for the tone and structure of the newsletter.
  Also, provide a relevance score (1-10) indicating how relevant the topic is to the target audience.

  Topic: {{{topic}}}
  Target Audience: {{{targetAudience}}}
  Previous Newsletter Performance: {{{previousNewsletterPerformance}}}
  `, // Ensure that Handlebars templating is used, and all parameters are correctly inserted.
});

const determineNewsletterToneStructureFlow = ai.defineFlow(
  {
    name: 'determineNewsletterToneStructureFlow',
    inputSchema: DetermineNewsletterToneStructureInputSchema,
    outputSchema: DetermineNewsletterToneStructureOutputSchema,
  },
  async input => {
    const {output} = await determineNewsletterToneStructurePrompt(input);
    return output!;
  }
);
